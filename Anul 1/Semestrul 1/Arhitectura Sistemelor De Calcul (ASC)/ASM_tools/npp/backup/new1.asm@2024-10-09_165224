bits 32 ; assembling for the 32 bits architecture

; declare the EntryPoint (a label defining the very first instruction of the program)
global start        

; declare external functions needed by our program
extern exit               ; tell nasm that exit exists even if we won't be defining it
import exit msvcrt.dll    ; exit is a function that ends the calling process. It is defined in msvcrt.dll
                          ; msvcrt.dll contains exit, printf and all the other important C-runtime specific functions

; our data is declared here (the variables needed by our program)
segment data use32 class=data
    ; ...

    ;a+13-c+d-7+b
    a dd 10 ; exemplu de valoare pentru a 
    b dd 5  ; exemplu de valoare pentru a
    c dd 3  ; exemplu de valoare pentru a
    d dd 7  ; exemplu de valoare pentru a
    
; our code starts here
segment code use32 class=code
    start:
        ; ...
        mov eax, [a]       ; EAX = a
    
        add eax, 13        ; EAX = a + 13
    
        sub eax, [c]       ; EAX = a + 13 - c
    
        add eax, [d]       ; EAX = a + 13 - c + d
    
        sub eax, 7         ; EAX = a + 13 - c + d - 7
    
        add eax, [b]       ; EAX = a + 13 - c + d - 7 + b
    
        ; EAX = REZULTAT DUPA 7 APELARI  
        
        ; exit(0)
        push    dword 0      ; push the parameter for exit onto the stack
        call    [exit]       ; call exit to terminate the program
